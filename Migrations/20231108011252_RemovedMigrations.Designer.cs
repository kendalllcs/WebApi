// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaStore.Data;

#nullable disable

namespace PizzaStore.Migrations
{
    [DbContext(typeof(PizzaStoreDbContext))]
    [Migration("20231108011252_RemovedMigrations")]
    partial class RemovedMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("IngredientProduct", b =>
                {
                    b.Property<int>("IngredientsIngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientsIngredientId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("IngredientProduct");
                });

            modelBuilder.Entity("PizzaStore.Entities.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            IngredientName = "Cheese "
                        },
                        new
                        {
                            IngredientId = 2,
                            IngredientName = "Peperoni "
                        },
                        new
                        {
                            IngredientId = 3,
                            IngredientName = "Sausage"
                        },
                        new
                        {
                            IngredientId = 4,
                            IngredientName = "Pinapple"
                        },
                        new
                        {
                            IngredientId = 5,
                            IngredientName = "Crust"
                        },
                        new
                        {
                            IngredientId = 6,
                            IngredientName = "Sauce"
                        });
                });

            modelBuilder.Entity("PizzaStore.Entities.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LineNumber")
                        .HasColumnType("INTEGER");

                    b.Property<float>("LineTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("LineItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("PizzaStore.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaStore.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 9.99f,
                            ProductName = "Cheese Pizza"
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 10.99f,
                            ProductName = "Peperoni Pizza"
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 12.99f,
                            ProductName = "Supreme Pizza"
                        },
                        new
                        {
                            ProductId = 4,
                            Price = 12.99f,
                            ProductName = "Pinapple Pizza"
                        },
                        new
                        {
                            ProductId = 5,
                            Price = 15.99f,
                            ProductName = "Deluxe Pizza"
                        },
                        new
                        {
                            ProductId = 6,
                            Price = 12.99f,
                            ProductName = "Veggie Pizza"
                        });
                });

            modelBuilder.Entity("PizzaStore.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("PizzaStore.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "kendalllawsoncs@gmail.com",
                            FirstName = "Kendall",
                            LastName = "Lawson",
                            PasswordHash = "23738F175522FC74DAE4DD60C47A64CE984114CF2ADED4D49C7BBB04D44C422088DDA3FFC73728D4C7C91B220D05DE2F470ABA7F4E23B97B130341E2D088ED57",
                            PasswordSalt = "BE17DF9CFF5CB2ABC159490EB2C62FD062D73C63CA467329ACD7EBF6A280D42F5E53B69664A9450FF250B6793A14CCEA58EAA34B0A639A7928C8077B7A653211",
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2,
                            Email = "notrealatall@gmail.com",
                            FirstName = "Bhil",
                            LastName = "Khozbee",
                            PasswordHash = "23738F175522FC74DAE4DD60C47A64CE984114CF2ADED4D49C7BBB04D44C422088DDA3FFC73728D4C7C91B220D05DE2F470ABA7F4E23B97B130341E2D088ED57",
                            PasswordSalt = "BE17DF9CFF5CB2ABC159490EB2C62FD062D73C63CA467329ACD7EBF6A280D42F5E53B69664A9450FF250B6793A14CCEA58EAA34B0A639A7928C8077B7A653211",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            Email = "kendalldoesnthaveffb@gmail.com",
                            FirstName = "Bryhan",
                            LastName = "DeeTrek",
                            PasswordHash = "23738F175522FC74DAE4DD60C47A64CE984114CF2ADED4D49C7BBB04D44C422088DDA3FFC73728D4C7C91B220D05DE2F470ABA7F4E23B97B130341E2D088ED57",
                            PasswordSalt = "BE17DF9CFF5CB2ABC159490EB2C62FD062D73C63CA467329ACD7EBF6A280D42F5E53B69664A9450FF250B6793A14CCEA58EAA34B0A639A7928C8077B7A653211",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("IngredientProduct", b =>
                {
                    b.HasOne("PizzaStore.Entities.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaStore.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaStore.Entities.LineItem", b =>
                {
                    b.HasOne("PizzaStore.Entities.Order", null)
                        .WithMany("LineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaStore.Entities.User", b =>
                {
                    b.HasOne("PizzaStore.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PizzaStore.Entities.Order", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
